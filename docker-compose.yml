# # On peut supprimer la version, elle n'est plus nécessaire
# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.4.4
#     container_name: zookeeper
#     ports:
#       - "22181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   kafka:
#     image: confluentinc/cp-kafka:7.4.4
#     container_name: kafka
#     depends_on:
#       - zookeeper
#     ports:
#       - "29092:29092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       # On met aussi en commentaire cette ligne car le schema-registry n'existe plus
#       # KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081

#   producer:
#     build: ./producer
#     depends_on:
#       - kafka  # <-- LA CORRECTION EST ICI ! Le producteur dépend maintenant directement de Kafka.

#   spark-master:
#     image: bitnami/spark:3.3.0
#     container_name: spark-master
#     ports:
#       - "8080:8080"  # Spark UI
#       - "7077:7077"  # Port du master
#     environment:
#       - SPARK_MODE=master
#       - SPARK_RPC_AUTHENTICATION_ENABLED=no
#       - SPARK_RPC_ENCRYPTION_ENABLED=no
#       - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#       - SPARK_SSL_ENABLED=no

#   spark-worker:
#     image: bitnami/spark:3.3.0
#     container_name: spark-worker
#     depends_on:
#       - spark-master
#     environment:
#       - SPARK_MODE=worker
#       - SPARK_MASTER_URL=spark://spark-master:7077
#       - SPARK_RPC_AUTHENTICATION_ENABLED=no
#       - SPARK_RPC_ENCRYPTION_ENABLED=no
#       - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#       - SPARK_SSL_ENABLED=no

#   spark-app:
#     build: ./spark-app
#     container_name: spark-app
#     depends_on:
#       - spark-worker
#       - kafka # C'est une bonne pratique d'ajouter aussi cette dépendance
#     environment:
#       - SPARK_MASTER_URL=spark://spark-master:7077
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  api-producer:
    build: ./api-producer
    container_name: api_producer
    depends_on:
      - kafka
    ports:
      - "5001:5000"

  spark-master:
    image: bitnami/spark:3.3.0
    container_name: spark-master
    ports:
      - "8081:8080"  # Port changé à 8081 pour éviter le conflit avec Jenkins
      - "7077:7077"
    environment:
      - SPARK_MODE=master

  spark-worker:
    image: bitnami/spark:3.3.0
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077

  spark-app:
    # ATTENTION: Nous supprimons la section 'build' ici.
    # Jenkins va construire cette image, et nous la lancerons manuellement ou avec un autre docker-compose plus tard.
    # Pour l'instant, on la met en commentaire pour ne pas créer de conflit.
    # build: ./spark-app
    # container_name: spark-app
    # ...
    image: alpine # On met une image bidon pour que le fichier soit valide
    command: ["echo", "Le service spark-app sera lancé par Jenkins ou manuellement"]


  # --- SERVICE JENKINS ---
  jenkins:
    build: ./jenkins  # <-- On dit à Docker de construire l'image depuis le dossier 'jenkins'
       # ... le reste ne change pas ...
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_home:/var/jenkins_home
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false

volumes:
  jenkins_home:      